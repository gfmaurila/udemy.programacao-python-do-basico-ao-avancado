
ğŸ“Š DICAS PARA TRABALHAR COM DATA SCIENCE EM PYTHON

---

ğŸ”¹ 1. PANDAS - ManipulaÃ§Ã£o e AnÃ¡lise de Dados

ğŸ“˜ O que Ã©:
Pandas Ã© a principal biblioteca para anÃ¡lise e manipulaÃ§Ã£o de dados tabulares (como arquivos CSV).

ğŸ“„ Exemplo:
import pandas as pd

df = pd.read_csv("dados.csv")
print(df.head())
print(df.groupby("categoria")["vendas"].sum())

ğŸ“Œ InstalaÃ§Ã£o:
pip install pandas

---

ğŸ”¹ 2. NUMPY - ComputaÃ§Ã£o NumÃ©rica e Vetorial

ğŸ“˜ O que Ã©:
NumPy Ã© uma biblioteca fundamental para computaÃ§Ã£o com arrays, estatÃ­sticas, operaÃ§Ãµes matemÃ¡ticas e performance.

ğŸ“„ Exemplo:
import numpy as np

valores = np.array([10, 20, 30])
print("MÃ©dia:", np.mean(valores))
print("Soma:", np.sum(valores))

ğŸ“Œ InstalaÃ§Ã£o:
pip install numpy

---

ğŸ”¹ 3. SCIKIT-LEARN - Machine Learning com Python

ğŸ“˜ O que Ã©:
Scikit-learn Ã© a principal biblioteca de machine learning para classificaÃ§Ã£o, regressÃ£o, clustering, etc.

ğŸ“„ Exemplo:
from sklearn.linear_model import LinearRegression
import numpy as np

x = np.array([[1], [2], [3], [4]])
y = np.array([2, 4, 6, 8])

modelo = LinearRegression()
modelo.fit(x, y)

print("PrevisÃ£o para 5:", modelo.predict([[5]]))

ğŸ“Œ InstalaÃ§Ã£o:
pip install scikit-learn

---

ğŸ’¡ DICA FINAL:
Use Pandas para anÃ¡lise, NumPy para performance numÃ©rica, e Scikit-learn para machine learning. Todas funcionam bem juntas!

